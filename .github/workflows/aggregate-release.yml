name: Aggregate GitHub Releases

on:
  push:
    tags:
      - 'v*'  # Matches tags like v1.2.0, v2.0.1, etc.

jobs:
  aggregate:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.NS_PAT }}

    steps:
      - name: Checkout public changelog repo
        uses: actions/checkout@v4

      - name: Prepare
        run: |
          echo "# Release Notes for ${{ github.event.inputs.tag }}" > CHANGELOG.md

      - name: Fetch release notes and append to changelog
        run: |
          INPUT_TAG="${{ steps.tag.outputs.tag }}"
          REPOS=("org/repo-a" "org/repo-b" "org/repo-c")

          for REPO in "${REPOS[@]}"; do
            echo "### $REPO" >> CHANGELOG.md

            # Try exact tag match first (e.g., v1.3)
            RELEASE=$(curl -s -H "Authorization: token ${GH_TOKEN}" \
              "https://api.github.com/repos/$REPO/releases/tags/${INPUT_TAG}")

            # If not found, try stripping the "v" (e.g., 1.3)
            if [[ $(echo "$RELEASE" | jq -r '.message') == "Not Found" ]]; then
              ALT_TAG="${INPUT_TAG#v}"
              echo "Fallback to alt tag: $ALT_TAG"
              RELEASE=$(curl -s -H "Authorization: token ${GH_TOKEN}" \
                "https://api.github.com/repos/$REPO/releases/tags/${ALT_TAG}")
            fi

            # Extract the body if available
            BODY=$(echo "$RELEASE" | jq -r '.body // "⚠️ No release notes found."')

            echo "$BODY" >> CHANGELOG.md
            echo -e "\n" >> CHANGELOG.md
          done


      - name: Commit and push changelog
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"

          git fetch origin main
          git checkout main
          git pull origin main

          git add CHANGELOG.md
          git commit -m "Add aggregated changelog for ${{ steps.tag.outputs.tag }}" || echo "No changes to commit"
          git push origin main
